{"input":{"ourVersion":"1.57.1","ourProductDate":"2021-06-17T13:26:56.255Z","commit":"507ce72a4466fbb27b715c3722558bb15afa9f48","locale":"en","devMode":false,"absoluteFolderPath":"/home/dext3r/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1625305531810},"result":[{"name":"vscode-theme-onedark","displayName":"Atom One Dark Theme","description":"One Dark Theme based on Atom","version":"2.2.3","publisher":"akamud","license":"MIT","galleryBanner":{"color":"#282C34","theme":"dark"},"engines":{"vscode":"^1.12.0"},"categories":["Themes"],"keywords":["atom","theme","dark","one dark"],"icon":"icon.png","contributes":{"themes":[{"label":"Atom One Dark","uiTheme":"vs-dark","path":"./themes/OneDark.json"}]},"bugs":{"url":"https://github.com/akamud/vscode-theme-onedark/issues","email":"muddibr@gmail.com"},"homepage":"https://github.com/akamud/vscode-theme-onedark","repository":{"type":"git","url":"https://github.com/akamud/vscode-theme-onedark"},"badges":[{"url":"https://vsmarketplacebadge.apphb.com/version/akamud.vscode-theme-onedark.svg","href":"https://marketplace.visualstudio.com/items/akamud.vscode-theme-onedark","description":"Extension version"},{"url":"https://vsmarketplacebadge.apphb.com/installs/akamud.vscode-theme-onedark.svg","href":"https://marketplace.visualstudio.com/items/akamud.vscode-theme-onedark","description":"Extension installs"},{"url":"https://vsmarketplacebadge.apphb.com/rating/akamud.vscode-theme-onedark.svg","href":"https://marketplace.visualstudio.com/items/akamud.vscode-theme-onedark","description":"Extension Rating"}],"uuid":"9b2c953d-6ad4-46d1-b18e-7e5992d1d8a6","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"akamud.vscode-theme-onedark","identifier":{"value":"akamud.vscode-theme-onedark","_lower":"akamud.vscode-theme-onedark"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/akamud.vscode-theme-onedark-2.2.3","path":"/home/dext3r/.vscode/extensions/akamud.vscode-theme-onedark-2.2.3","scheme":"file"}},{"name":"theme-dracula","version":"2.22.4","displayName":"Dracula Official","homepage":"https://draculatheme.com/","description":"Official Dracula Theme. A dark theme for many editors, shells, and more.","publisher":"dracula-theme","license":"MIT","scripts":{"build":"node ./scripts/build.js","lint":"node ./scripts/lint.js","package":"vsce package -o ./bin/dracula.vsix","vscode:prepublish":"npm run build","vsce-publish":"vsce publish"},"maintainers":["Derek P Sifford <dereksifford@gmail.com>"],"contributors":["Krzysztof Wisznarewski","Daniel Ramos","Eric Jackson","Elliott Pogue","Ajit Singh","Teddy Bradford"],"repository":{"type":"git","url":"https://github.com/dracula/visual-studio-code.git"},"bugs":{"url":"https://github.com/dracula/visual-studio-code/issues"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["dracula","dark","theme","color-theme"],"icon":"icon.png","galleryBanner":{"color":"#3c4557","theme":"dark"},"contributes":{"themes":[{"label":"Dracula","uiTheme":"vs-dark","path":"./theme/dracula.json"},{"label":"Dracula Soft","uiTheme":"vs-dark","path":"./theme/dracula-soft.json"}]},"devDependencies":{"js-yaml":"^4.1.0","prettier":"^2.3.1","tinycolor2":"^1.4.2","vsce":"^1.93.0"},"uuid":"4e44877c-1c8d-4f9c-ba86-1372d0fbeeb1","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"dracula-theme.theme-dracula","identifier":{"value":"dracula-theme.theme-dracula","_lower":"dracula-theme.theme-dracula"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/dracula-theme.theme-dracula-2.22.4","path":"/home/dext3r/.vscode/extensions/dracula-theme.theme-dracula-2.22.4","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"8.0.1","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.57.0"},"keywords":["multi-root ready","prettier","formatter","javascript","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install","prettier":"prettier --write '**/*.{ts,json,md,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","postinstall":"husky install"},"lint-staged":{"**/*.{ts,json,md,yml,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/glob":"^7.1.3","@types/lodash":"^4.14.160","@types/mocha":"^8.0.0","@types/node":"14","@types/prettier":"^2.1.0","@types/resolve":"^1.17.0","@types/semver":"^7.3.1","@types/sinon":"^10.0.0","@types/vscode":"^1.57.0","@typescript-eslint/eslint-plugin":"^4.23.0","@typescript-eslint/parser":"^4.23.0","eslint":"^7.24.0","eslint-config-prettier":"^8.1.0","glob":"^7.1.6","husky":"^6.0.0","lint-staged":"^11.0.0","mocha":"^9.0.1","sinon":"^11.1.1","ts-loader":"^9.1.2","typescript":"^4.2.4","vsce":"^1.80.0","vscode-nls-dev":"^3.3.2","vscode-test":"^1.4.0","webpack":"^5.37.0","webpack-cli":"^4.2.0"},"dependencies":{"find-up":"^5.0.0","prettier":"^2.3.1","resolve":"^1.17.0","semver":"^7.3.4","vscode-nls":"^5.0.0"},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether prettier is enabled or not.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"If true, this extension will process files in node_modules","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a .prettierignore file","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the prettier module","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"resource"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines","scope":"resource"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX","scope":"resource"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"resource"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.","scope":"resource"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier","scope":"resource"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted","scope":"resource"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"resource"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/esbenp.prettier-vscode-8.0.1","path":"/home/dext3r/.vscode/extensions/esbenp.prettier-vscode-8.0.1","scheme":"file"}},{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, Fortran","version":"0.11.4","featureFlags":{"usingNewPythonInterpreterPathApi":true,"usingNewPythonInterpreterPathApiV2":true},"publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.56.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage","onStartupFinished"],"main":"./out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":{"light":"./images/run-light.svg","dark":"./images/run-dark.svg"}},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput && !config.code-runner.runInTerminal","command":"code-runner.stop","group":"stop-code-run"}],"editor/title/run":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder && config.code-runner.showRunCommandInExplorerContextMenu","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","scheme":"csi -script","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runhaskell","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script","kit":"kitc --run","v":"v run","sass":"sass --style expanded","scss":"scss --style expanded","less":"cd $dir && lessc $fileName $fileNameWithoutExt.css","FortranFreeForm":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran-modern":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran_fixed-form":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".scm":"csi -script",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script",".kit":"kitc --run",".v":"v run",".vsh":"v run",".sass":"sass --style expanded",".cu":"cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.showRunCommandInExplorerContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in explorer context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^4.0.2","tree-kill":"^1.2.2"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","@types/vscode":"^1.56.0","mocha":"^6.1.4","tslint":"^5.5.0","typescript":"^3.8.3"},"uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.code-runner","identifier":{"value":"formulahendry.code-runner","_lower":"formulahendry.code-runner"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/formulahendry.code-runner-0.11.4","path":"/home/dext3r/.vscode/extensions/formulahendry.code-runner-0.11.4","scheme":"file"}},{"name":"vscode-power-mode","displayName":"Power Mode","description":"Your code is powerful, unleash it! The extension made popular by Code in the Dark has finally made its way to VS Code.","version":"2.2.0","publisher":"hoovercj","icon":"images/icon-large.png","author":{"name":"Cody Hoover","email":"vscode@codyhoover.com","url":"https://github.com/hoovercj"},"license":"MIT","bugs":{"url":"https://github.com/hoovercj/vscode-power-mode/issues"},"repository":{"type":"git","url":"https://github.com/hoovercj/vscode-power-mode.git"},"homepage":"https://github.com/hoovercj/vscode-power-mode","engines":{"vscode":"^1.13.0"},"categories":["Themes","Other"],"activationEvents":["*"],"main":"./out/src/extension","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"2.5.2","vscode":"1.1.5","mocha":"2.3.3","@types/node":"6.0.40","@types/mocha":"2.2.32"},"contributes":{"configuration":{"title":"Power Mode","properties":{"powermode.enabled":{"default":false,"type":"boolean","description":"Enable to activate POWER MODE!!!"},"powermode.presets":{"type":"string","enum":["particles","fireworks","flames","magic","clippy","simple-rift","exploding-rift"],"default":"particles","description":"Choose between different preset gifs to use when powermode is activated"},"powermode.comboThreshold":{"default":0,"type":"number","description":"The combo number needed to activate POWER MODE!!!"},"powermode.comboTimeout":{"default":10,"type":"number","description":"The number of seconds before the combo resets"},"powermode.enableExplosions":{"type":"boolean","default":true,"description":"Set to false to disable explosions while typing"},"powermode.enableStatusBarComboCounter":{"type":"boolean","default":true,"description":"Set to false to disable showing the combo in the statusbar"},"powermode.enableStatusBarComboTimer":{"type":"boolean","default":true,"description":"Set to false to disable showing the timer in the statusbar"},"powermode.enableShake":{"type":"boolean","default":true,"description":"Set to false to disable shaking while typing"},"powermode.shakeIntensity":{"type":"number","default":5,"description":"The intensity with which the screen shakes"},"powermode.maxExplosions":{"type":"number","default":1,"description":"The maximum number of simultaneous explosions"},"powermode.explosionSize":{"type":"number","default":6,"description":"The size of the explosions. For value X, the height is set to X rem and the width to X ch"},"powermode.explosionFrequency":{"type":"number","default":2,"description":"The number of key strokes needed to trigger an explosion. 2 means every second keystroke will explode, 1 means every key stroke."},"powermode.explosionOffset":{"type":"number","default":0.35,"description":"The vertical offset of the explosions. Increasing it will move the explosions up, decreasing it will move them down."},"powermode.customExplosions":{"type":"array","items":"string","default":[],"description":"Use anything that can go in the 'url()' part of a background image such as a base64 encoded gif or absolute file path WITHOUT quotes. Urls must be https."},"powermode.backgroundMode":{"type":"string","enum":["mask","image"],"default":"mask","description":"Affects the css properties used to display the gif. `mask` uses the gifs as a mask to let the background come through (similar to atom power mode) and `image` will display the actual gif."},"powermode.gifMode":{"type":"string","enum":["continue","restart"],"default":"continue","description":"`restart` will restart the gif each time it is shown, `continue` will resume playing it from its previous point"},"powermode.explosionOrder":{"description":"Determines how the explosions are cycled. 'random' (default) picks from the list randomly. 'sequential' goes through the list in order, and a number will select the explosion at that (zero based)index in the list","oneOf":[{"type":"string","enum":["random","sequential"]},{"type":"number"}],"default":"random"},"powermode.explosionDuration":{"description":"Determines how long an explosion lasts (in milliseconds). Set to 0 for it to last forever.","type":"number","default":1000},"powermode.customCss":{"description":"Set custom CSS that will apply to the explosion element.","type":"object","default":{}}}}},"uuid":"a27ff63d-ff11-478d-b1ab-19aa1ef19882","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"hoovercj.vscode-power-mode","identifier":{"value":"hoovercj.vscode-power-mode","_lower":"hoovercj.vscode-power-mode"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/hoovercj.vscode-power-mode-2.2.0","path":"/home/dext3r/.vscode/extensions/hoovercj.vscode-power-mode-2.2.0","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.4.1","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.53.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgOnlineHelpSuggested","onCommand:C_Cpp.GenerateEditorConfig","onCommand:C_Cpp.GoToNextDirectiveInGroup","onCommand:C_Cpp.GoToPrevDirectiveInGroup","onCommand:C_Cpp.CheckForCompiler","onDebugInitialConfigurations","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","primary":true,"when":"false","steps":[{"id":"verify.compiler.mac","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == mac","media":{"markdown":"walkthrough/installcompiler/install-clang-macos.md"}},{"id":"verify.compiler.linux","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == linux","media":{"markdown":"walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"verify.compiler.windows","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == windows","media":{"markdown":"walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"open.project","title":"Open your project folder","description":"Open an existing folder that contains your C++ project, or create a new folder. \n[Pick a folder](command:workbench.action.files.openFolder)","when":"workspaceFolderCount == 0","media":{"altText":"A screenshot that shows a C++ project opened in the file Explorer.","image":{"light":"walkthrough/images/cpp-folder-explorer-light.png","dark":"walkthrough/images/cpp-folder-explorer-dark.png","hc":"walkthrough/images/cpp-folder-explorer-hc.png"}}},{"id":"setup.intellisense","title":"Configure C++ IntelliSense","description":"Verify important IntelliSense settings like Compiler Path, Compiler Args, IntelliSense Mode, and Include Path. \n[Open IntelliSense Configuration](command:C_Cpp.ConfigurationEditUI?-2)","media":{"altText":"A screenshot that shows the IntelliSense Configurations UI with important settings highlighted.","image":{"light":"walkthrough/images/intellisense-config-light.png","dark":"walkthrough/images/intellisense-config-dark.png","hc":"walkthrough/images/intellisense-config-hc.png"}}},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","when":"workspacePlatform == mac","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-mac.md"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","when":"workspacePlatform == linux","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-linux.md"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","when":"workspacePlatform == windows","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-windows.md"}},{"id":"install.cmake.tools","title":"Install CMake Tools","description":"Do you build your project with CMake? Install the CMake Tools extension to seamlessly build and debug your CMake project. \n[Install CMake Tools](command:workbench.extensions.installExtension?%22ms-vscode.cmake-tools%22)","completionEvents":["extensionInstalled:ms-vscode.cmake-tools"],"media":{"altText":"A screenshot of the CMake Tools extension page in the Marketplace.","image":{"light":"walkthrough/images/cmake-tools-light.png","dark":"walkthrough/images/cmake-tools-dark.png","hc":"walkthrough/images/cmake-tools-hc.png"}}},{"id":"watch.tutorials","title":"Lean back and get started","description":"Watch this series of short and practical videos about setting up C++ IntelliSense and building and debugging C++ projects. \n[Watch Tutorials](https://code.visualstudio.com/docs/cpp/introvideos-cpp)","media":{"altText":"A screenshot with a preview of the video tutorial and a play button.","image":"walkthrough/images/getting-started-video.png"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","description":"The path to either a compiler or script that performs compilation"},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cppReferenceTypes:hasResults"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${workspaceFolder}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":"string","description":"The full path of the clang-format executable. If not specified, and clang-format is available in the environment path, that is used. If not found in the environment path, a copy of clang-format bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","Default","Disabled"],"enumDescriptions":["clang-format will be used to format code.","The Visual C++ formatting engine will be used to format code.","clang-format will be used to format code.","Code formatting will be disabled."],"default":"clangFormat","description":"Configures the formatting engine","scope":"resource"},"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"description":"Braces are indented by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"enumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on \"C_Cpp.vcFormat.indent.multiLineRelativeTo\"."],"default":"indent","description":"When a new line is typed, it is aligned under the opening parenthesis or based on \"C_Cpp.vcFormat.indent.multiLineRelativeTo\".","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"description":"Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"description":"Code inside case block is indented relative to its label by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"description":"Indent braces following a case statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"description":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"description":"Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"description":"Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"description":"Place 'catch' and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"description":"Place 'else' on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"description":"Place 'while' in a do-while loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"enumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Code blocks are always formatted based on the values of the VC Format: New Line settings"],"default":"oneLiners","description":"Wrapping options for blocks","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"machine-overridable"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"description":"If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" on Linux (or \"$HOME/.cache/vscode-cpptools/\" if XDG_CACHE_HOME is not defined), and \"$HOME/Library/Caches/vscode-cpptools/\" on Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"description":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default limit is 4096 MB and the maximum limit is 16 GB. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":2000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","gnu89","gnu99","gnu11","gnu17"],"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20"],"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.configurationProvider":{"type":"string","description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"description":"The value to use in a configuration if \"customConfigurationVariables\" is not set, or the values to insert if \"${default}\" is present as a key in \"customConfigurationVariables\".","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".","scope":"window"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from nan and node-addon-api when they're dependencies.","scope":"application"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"description":"If true, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"description":"If true, debugger shell command substitution will use obsolete backtick (`).","scope":"window"},"C_Cpp.codeFolding":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"description":"If true, autocomplete will automatically add \"(\" after function calls, in which case \")\" may also be added, depending on the value of the \"editor.autoClosingBrackets\" setting.","scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if \"C_Cpp.exclusionPolicy\" is changed). These are specific to the C/C++ extension and are in addition to \"files.exclude\", but unlike \"files.exclude\" they are not removed from the Explorer view. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true},"additionalProperties":{"anyOf":[{"type":"boolean","description":"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","description":"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."}}}]},"scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId == 'c' && editorTextFocus || editorLangId == 'cpp' && editorTextFocus || editorLangId == 'cuda-cpp' && editorTextFocus"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf')","VS Code's integrated terminal","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"}],"editor/context":[{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}],"commandPalette":[{"command":"C_Cpp.referencesViewGroupByType","when":"cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[cuda-cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[c]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[Log]":{"editor.wordWrap":"off"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"A C++/CLI reference type."},{"id":"cliProperty","superType":"property","description":"A C++/CLI property."},{"id":"genericType","superType":"class","description":"A C++/CLI generic type."},{"id":"valueType","superType":"class","description":"A C++/CLI value type."},{"id":"templateFunction","superType":"function","description":"A template function."},{"id":"templateType","superType":"class","description":"A template type."},{"id":"operatorOverload","superType":"operator","description":"An overloaded operator."},{"id":"memberOperatorOverload","superType":"operator","description":"An overloaded operator member function."},{"id":"newOperator","superType":"operator","description":"A C++ new or delete operator."},{"id":"customLiteral","superType":"number","description":"A user-defined literal."},{"id":"numberLiteral","superType":"number","description":"A user-defined literal number."},{"id":"stringLiteral","superType":"string","description":"A user-defined literal string."}],"semanticTokenModifiers":[{"id":"global","description":"Annotates a symbol that is declared in global scope."},{"id":"local","description":"Annotates a symbol that is declared in local scope."}],"semanticTokenScopes":[{"scopes":{"label":["entity.name.label"],"variable.global":["variable.other.global"],"variable.local":["variable.other.local"],"property.static":["variable.other.property.static"],"method.static":["entity.name.function.member.static"],"macro":["entity.name.function.preprocessor"],"referenceType":["entity.name.type.class.reference"],"cliProperty":["variable.other.property.cli"],"genericType":["entity.name.type.class.generic"],"valueType":["entity.name.type.class.value"],"templateFunction":["entity.name.function.templated"],"templateType":["entity.name.type.class.templated"],"operatorOverload":["entity.name.function.operator"],"memberOperatorOverload":["entity.name.function.operator.member"],"newOperator":["keyword.operator.new"],"numberLiteral":["entity.name.operator.custom-literal.number"],"customLiteral":["entity.name.operator.custom-literal"],"stringLiteral":["entity.name.operator.custom-literal.string"]}}]},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls --watch --progress","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --progress","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","generatePackageHashes":"gulp generate-package-hashes","pr-check":"gulp pr-check","lint":"gulp lint","unitTests":"tsc -p test.tsconfig.json && node ./out/test/unitTests/runTest.js","integrationTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/languageServer/runTest.js","intelliSenseFeaturesTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/IntelliSenseFeatures/runTest.js","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^8.2.2","@types/node":"^14.14.0","@types/plist":"^3.0.2","@types/semver":"^7.1.0","@types/tmp":"^0.1.0","@types/vscode":"1.53.0","@types/which":"^1.3.2","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^4.22.1","@typescript-eslint/eslint-plugin-tslint":"^4.22.1","@typescript-eslint/parser":"^4.22.1","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^7.25.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^33.1.0","event-stream":"^4.0.1","fs-extra":"^8.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.1","http-proxy-agent":"^2.1.0","minimist":"^1.2.5","mocha":"^8.3.2","parse-git-config":"^3.0.0","parse5":"^5.1.0","parse5-traverse":"^1.0.3","ts-loader":"^8.1.0","tslint":"^5.19.0","typescript":"^3.5.3","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-nls-dev":"^3.2.6","vscode-test":"^1.3.0","webpack":"^5.28.0","webpack-cli":"^4.5.0","xml2js":"^0.4.19"},"dependencies":{"comment-json":"^3.0.3","editorconfig":"^0.15.3","escape-string-regexp":"^2.0.0","https-proxy-agent":"^2.2.4","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.2","tmp":"^0.1.0","vscode-cpptools":"^5.0.0","vscode-extension-telemetry":"^0.1.2","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","which":"^2.0.2","yauzl":"^2.10.0"},"resolutions":{"**/mkdirp/minimist":"^0.2.1","yargs-parser":"^15.0.1","y18n":"^5.0.5","hosted-git-info":"^3.0.8","browserslist":"^4.16.6"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2164295","platforms":["linux"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"2E6E25B3B9C10ECC25A5B523C413182D185F13492602CF92896C658E6959CBFA"},{"description":"C/C++ language components (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?linkid=2164297","platforms":["linux"],"architectures":["arm"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"25F5776247184254D49B9FCC25D0D018AECF1D8930FC517F25C9FCC0A9E650AC"},{"description":"C/C++ language components (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?linkid=2165100","platforms":["linux"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"186614524A13EC75BF68798861818D25CE82FDE293C57B725C11F62B0694EC55"},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2164296","platforms":["darwin"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"8E19E1BDD95FCC80F74529E6B5C24AB761F7D84B92CF44C33DAE38A8F11F6FB5"},{"description":"C/C++ language components (OS X ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2164187","platforms":["darwin"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"1225791C05E0DBD708D0EE9598ACBC94B742E25C7CAE92C5C89791AF924D4B96"},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2164298","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"8D9E008B789D13DF4175795400E9402D43D199846CEC1DC4DD1F319B4C0D5492"},{"description":"C/C++ language components (Windows ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2165101","platforms":["win32"],"architectures":["arm64"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"4B94A64721FE8D0E1F93AACBA1190A9DC00DF7225E20BF628AC57BEC6301AA7D"},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162325","platforms":["linux"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"3F10BAD92274A07DB5DE0FD922C0CEDA034DECDB9E73DC477DD43CF30B500A7B"},{"description":"ClangFormat (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?LinkID=2162327","platforms":["linux"],"architectures":["arm"],"binaries":["./LLVM/bin/clang-format"],"integrity":"1098291D78FB3E9411C445218BE14D1A96E7242E0B70549DA499C6551D8CA538"},{"description":"ClangFormat (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162412","platforms":["linux"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"CD5578A21C8D515D15C0611621E44C03DE4E667EFB4EE1A0DE18B08FD9B96794"},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=2162416","platforms":["darwin"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"AEB24D394118EAD87087DCC651F2EE329FC335ECE88ED6C8C2A9E93ED60DFECD"},{"description":"ClangFormat (OS X arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162413","platforms":["darwin"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"AE5507F54562B9DA99E3F8318E25C93BD38AD2FBF4238ADF1C152ECFB0C10FA9"},{"description":"ClangFormat (Windows x86)","url":"https://go.microsoft.com/fwlink/?LinkID=2162326","platforms":["win32"],"architectures":["x86"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"928AF7C36F0E148537D8DF4D7AEEAD8A18DF9E4CA5C8BF23E49776EFBE078453"},{"description":"ClangFormat (Windows x64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162415","platforms":["win32"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"7977B82D6BD88C1AEB5071146EDCB45976D1EA66E312EEF9156957CAD0702F35"},{"description":"ClangFormat (Windows arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162414","platforms":["win32"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"6756365C82B5BD90C6A40C13CF8E3599E4A1DB50628111FFDB3A76FF85256BA4"},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[],"integrity":"579295329C1825588B6251EEA56571D1B9555BD529AA1A319CDFE741BC22D786"},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x64"],"binaries":["./debugAdapters/mono.linux-x86_64"],"integrity":"927C5094E83CE64EDC3A267EE1F13267CFA09FC1E9A5ADC870A752C05AD26F17"},{"description":"Mono Runtime (Linux / armhf)","url":"https://aka.ms/mono-runtime-linux-arm","platforms":["linux"],"architectures":["arm"],"binaries":["./debugAdapters/mono.linux-armhf"],"integrity":"D2D1FE7FB5CC5B2A60364F08829467509879D603FC951AC3805B530C8CEEF981"},{"description":"Mono Runtime (Linux / arm64)","url":"https://aka.ms/mono-runtime-linux-arm64","platforms":["linux"],"architectures":["arm64"],"binaries":["./debugAdapters/mono.linux-arm64"],"integrity":"946C54C8C6BF5BF79AC05D4E152F8D8647700FA786C21505832B3C79988339B4"},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"],"integrity":"5D9E5AB3E921D138887BD12FF46B02BFC85B692B438EDFAAEB1E1E7837F1D40B"},{"description":"LLDB-MI (macOS Mojave and higher)","url":"https://go.microsoft.com/fwlink/?linkid=2154927","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":false,"binaries":["./debugAdapters/lldb-mi/bin/lldb-mi"],"integrity":"FA76E76C7D8E5D5CD0CC8E68C6FB70A354750D596DF3CED36ABF78AAD5C562C0"},{"description":"LLDB 3.8.0 (macOS High Sierra and lower)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":true,"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"],"integrity":"D4ACCD43F562E42CE30879AC15ADF5FB6AA50656795DCE8F3AD32FB108BB3B7E"},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2162486","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"E5046509D510086B99F171595114220AD8E9F820E7238B6A5199CD78B9AD2078"}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/ms-vscode.cpptools-1.4.1","path":"/home/dext3r/.vscode/extensions/ms-vscode.cpptools-1.4.1","scheme":"file"}},{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"4.7.0","publisher":"PKief","engines":{"vscode":"^1.51.0"},"homepage":"https://github.com/PKief/vscode-material-icon-theme/blob/main/README.md","repository":{"type":"git","url":"https://github.com/PKief/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/PKief/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"extensionKind":["ui","workspace"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["*"],"main":"./dist/extension","contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./dist/material-icons.json","_watch":true}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration"},{"command":"material-icon-theme.toggleExplorerArrows","title":"Material Icons: Toggle Explorer Arrows"},{"command":"material-icon-theme.changeOpacity","title":"Material Icons: Change Opacity"},{"command":"material-icon-theme.toggleGrayscale","title":"Material Icons: Toggle Grayscale"},{"command":"material-icon-theme.changeSaturation","title":"Material Icons: Change Saturation"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.showWelcomeMessage":{"type":"boolean","default":true,"description":"Show the welcome message after first installation."},"material-icon-theme.showUpdateMessage":{"type":"boolean","default":false,"description":"Show the update message after each update."},"material-icon-theme.showReloadMessage":{"type":"boolean","default":true,"description":"Show restart notification."},"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","Icons for Vue.","Icons for Vue and Vuex.","Icons for NestJS.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","vue","vue_vuex","nest","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."},"material-icon-theme.saturation":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the saturation of the icons."}}}},"scripts":{"build":"npm run compile:dev && npm run postcompile","check":"ts-node ./src/scripts/icons/checks","compile":"webpack --mode production","compile:dev":"webpack --mode none","compile:watch":"webpack --mode none --watch","contributors":"ts-node ./src/scripts/contributors/index.ts","generateJson":"ts-node ./src/scripts/icons/generateJson.ts","lint":"eslint -c .eslintrc.json --ext .ts ./src/**/*.ts","postcompile":"npm run generateJson && npm run check","pretest":"npm run build && tsc -p ./","preview":"ts-node ./src/scripts/preview","test":"node ./out/test/runTest.js","vscode:prepublish":"npm run lint && npm run compile"},"dependencies":{"lodash.merge":"4.6.2","semver":"7.3.4"},"devDependencies":{"@types/glob":"^7.1.3","@types/lodash.merge":"^4.6.6","@types/mocha":"^8.2.2","@types/node":"^14.14.35","@types/puppeteer":"^5.4.3","@types/semver":"^7.3.4","@types/vscode":"~1.51.0","@typescript-eslint/eslint-plugin":"^4.18.0","@typescript-eslint/parser":"^4.18.0","clean-webpack-plugin":"^3.0.0","eslint":"^7.22.0","eslint-config-prettier":"^8.1.0","glob":"^7.1.6","mocha":"^8.3.2","puppeteer":"^8.0.0","rimraf":"^3.0.2","ts-loader":"^8.0.18","ts-node":"^9.1.1","typescript":"^4.2.3","vscode-test":"^1.5.1","webpack":"^5.27.0","webpack-cli":"^4.5.0"},"uuid":"5db78037-f674-459f-a236-db622c427c5b","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"PKief.material-icon-theme","identifier":{"value":"PKief.material-icon-theme","_lower":"pkief.material-icon-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/pkief.material-icon-theme-4.7.0","path":"/home/dext3r/.vscode/extensions/pkief.material-icon-theme-4.7.0","scheme":"file"}},{"name":"ayu","displayName":"Ayu","description":"A simple theme with bright colors and comes in three versions — dark, light and mirage for all day long comfortable work.","version":"0.20.1","publisher":"teabyii","license":"MIT","repository":{"type":"git","url":"https://github.com/ayu-theme/vscode-ayu"},"bugs":{"url":"https://github.com/ayu-theme/vscode-ayu/issues","email":"teabyii@gmail.com"},"engines":{"vscode":"^1.13.0"},"categories":["Themes"],"keywords":["icon-theme","theme","ayu"],"homepage":"https://github.com/ayu-theme/vscode-ayu","icon":"assets/logo.png","contributes":{"themes":[{"label":"Ayu Dark","uiTheme":"vs-dark","path":"./ayu-dark.json"},{"label":"Ayu Dark Bordered","uiTheme":"vs-dark","path":"./ayu-dark-bordered.json"},{"label":"Ayu Light","uiTheme":"vs","path":"./ayu-light.json"},{"label":"Ayu Light Bordered","uiTheme":"vs","path":"./ayu-light-bordered.json"},{"label":"Ayu Mirage","uiTheme":"vs-dark","path":"./ayu-mirage.json"},{"label":"Ayu Mirage Bordered","uiTheme":"vs-dark","path":"./ayu-mirage-bordered.json"}],"iconThemes":[{"id":"ayu","label":"Ayu","path":"./ayu-icons.json"}]},"scripts":{"build":"ts-node ./src/build.ts","package":"vsce package","start":"npm run build; npm run package","publish":"vsce publish"},"devDependencies":{"ayu":"^7.3.0","ts-node":"^8.10.2","typescript":"^3.9.3","vsce":"^1.75.0"},"uuid":"5178733e-4b02-4829-95c5-1ce970847c23","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"teabyii.ayu","identifier":{"value":"teabyii.ayu","_lower":"teabyii.ayu"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/teabyii.ayu-0.20.1","path":"/home/dext3r/.vscode/extensions/teabyii.ayu-0.20.1","scheme":"file"}},{"name":"material-theme","displayName":"One Dark Pro","description":"Atom's iconic One Dark theme for Visual Studio Code","version":"3.10.14","publisher":"zhuangtongfa","bugs":{"url":"https://github.com/Binaryify/OneDark-Pro/issues"},"homepage":"https://binaryify.github.io/OneDark-Pro/","repository":{"type":"git","url":"https://github.com/Binaryify/OneDark-Pro"},"engines":{"vscode":"^1.55.0"},"activationEvents":["*"],"main":"./out/extension.js","categories":["Themes"],"extensionKind":["ui","workspace"],"eslintConfig":{"extends":["@mskelton","@mskelton/eslint-config/typescript"],"plugins":["html"],"rules":{"sort/imports":"off"}},"scripts":{"docs":"docsify serve docs","build:theme":"ts-node --project scripts/tsconfig.json scripts/generate-theme.ts","build:ts":"tsc -p src","build":"yarn build:sass && yarn build:theme && yarn build:ts","lint":"eslint . --ext .ts","watch:theme":"nodemon ./scripts/generate-theme.ts","watch:ts":"yarn build:ts -w","vscode:prepublish":"yarn build","package":"vsce package","build:sass":"yarn sass --no-source-map scss:styles && yarn sass --no-source-map scss:styles/origin"},"prettier":{"singleQuote":true,"semi":false},"contributes":{"markdown.previewStyles":["./styles/base-inside.css","./styles/markdown-inside.css","./styles/atom-one-dark-inside.css"],"commands":[{"command":"oneDarkPro.showChangelog","title":"Show changelog","category":"OneDark Pro"},{"command":"oneDarkPro.setVivid","title":"Turn on vivid colors","category":"OneDark Pro"},{"command":"oneDarkPro.cancelVivid","title":"Turn off vivid colors","category":"OneDark Pro"},{"command":"oneDarkPro.setItalic","title":"Turn on italic code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.cancelItalic","title":"Turn off italic code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.setBold","title":"Turn on bold code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.cancelBold","title":"Turn off bold code on some scopes","category":"OneDark Pro"}],"themes":[{"label":"One Dark Pro","uiTheme":"vs-dark","path":"./themes/OneDark-Pro.json"}],"configuration":{"title":"One Dark Pro","properties":{"oneDarkPro.editorTheme":{"type":"string","default":"","markdownDescription":"Switch to different editor theme","enum":["oneDarkPro","oneDarkProFlat","nord","solarized","solarizedFlat","shadow","panda","ayu","vscode","justBlack"]},"oneDarkPro.italic":{"type":"boolean","default":true,"description":"Toggle italics on some scopes"},"oneDarkPro.vivid":{"type":"boolean","default":false,"markdownDescription":"Toggle vivid colors"},"oneDarkPro.bold":{"type":"boolean","default":false,"markdownDescription":"Toggle bold on some scopes"},"oneDarkPro.markdownStyle":{"type":"boolean","default":true,"description":"Toggle markdown style"}}}},"icon":"icon.png","keywords":["one dark","onedark","one dark pro","onedark pro","theme","atom"],"devDependencies":{"@mskelton/eslint-config":"6.1.0","@mskelton/prettier-config":"5.1.0","@types/node":"12.20.3","@types/vscode":"1.55.0","@typescript-eslint/eslint-plugin":"4.15.1","all-contributors-cli":"6.19.0","docsify-cli":"4.4.3","eslint":"7.20.0","eslint-plugin-html":"6.0.3","eslint-plugin-prettier":"3.3.1","eslint-plugin-sort":"1.5.0","nodemon":"1.19.4","prettier":"2.2.1","sass":"1.29.0","ts-node":"8.10.2","typescript":"4.1.5","vsce":"1.87.1"},"galleryBanner":{"color":"#2d323b","theme":"dark"},"dependencies":{"marked":"^2.0.0"},"capabilities":{"untrustedWorkspaces":{"supported":true}},"uuid":"26a529c9-2654-4b95-a63f-02f6a52429e6","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"zhuangtongfa.material-theme","identifier":{"value":"zhuangtongfa.material-theme","_lower":"zhuangtongfa.material-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/dext3r/.vscode/extensions/zhuangtongfa.material-theme-3.10.14","path":"/home/dext3r/.vscode/extensions/zhuangtongfa.material-theme-3.10.14","scheme":"file"}}]}